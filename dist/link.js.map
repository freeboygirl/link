{"version":3,"sources":["link.prefix.js","var.js","helper.js","watchArray.js","bind.js","class.js","disable.js","index.js","model.js","readonly.js","repeat.js","showhide.js","checkbox.js","common.js","money.js","phone.js","Link.js","behaviors.js","bootstrap.js","compile.js","error.js","eval.js","event.js","linkContext.js","observer.js","parse.js","public.js","watchNotify.js","route.js","link.suffix.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvrLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpDA;AACA;AACA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACljCA;AACA;AACA;AACA;AACA;AACA;AOLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxfile":"link.js","sourcesContent":["'use strict';\r\n(function () {\r\n  window.link = function linkFactory(config) {\r\n    config = extend({}, { el: window.document, model: {}, methods: null, routes: null }, config);\r\n    return new Link(config.el, config.model, config.methods, config.routes);\r\n  };\r\n  link.helper = {\r\n    isObject: isObject,\r\n    isFunction: isFunction,\r\n    isArray: isArray,\r\n    addClass: addClass,\r\n    removeClass: removeClass,\r\n    arrayRemove: arrayRemove,\r\n    formatString: formatString,\r\n    trim: trim,\r\n    each: each,\r\n    hash: hash\r\n  };\r\n\r\n  link.filter = function (name, fn) {\r\n    if (!Link.prototype.filters[name] && isFunction(fn)) {\r\n      Link.prototype.filters[name] = fn;\r\n    }\r\n  };","var\r\n  interpolationRegex = /\\{\\{(\\$?[^\\}]+)\\}\\}/g,\r\n  watchRegex = /^\\$?\\w+(\\.?\\w+)*$/,\r\n  eventDirectiveRegex = /^x-on-(\\w+)$/, // x-on- with native dom event name to bind event handler \r\n  REPEAT = 'x-repeat',\r\n  VIEW = 'x-view',\r\n  BIND = 'x-bind',\r\n  MODEL = 'x-model',\r\n  SHOW = 'x-show',\r\n  HIDE = 'x-hide',\r\n  CLASS = 'x-class',\r\n  DISABLED = 'x-disabled',\r\n  VIEW = 'x-view',\r\n  READONLY = 'x-readonly',\r\n  directives = [BIND, MODEL, REPEAT, SHOW, HIDE, CLASS, DISABLED, VIEW, READONLY],\r\n  fnRegex = /^[a-zA-Z$_]\\w*$/,\r\n  fnCallRegex = /^[a-zA-Z$_]\\w*\\(\\s*\\)$/,\r\n  fnCallParamsRegex = /^[a-zA-Z$_]\\w*\\(([^\\)]+)\\)$/,\r\n  unshift = Array.prototype.unshift,\r\n  quoteRegx = /[\\'\\\"]/g,\r\n  watchStartRegex = /[a-zA-Z$_]/,\r\n  validWatchChar = /[a-zA-Z0-9$\\.]/,\r\n  hasOwnProperty = Object.prototype.hasOwnProperty,\r\n  concat = Array.prototype.concat;","function isObject(obj) {\r\n  return !!obj && typeof obj === 'object'\r\n}\r\n\r\nfunction isFunction(func) {\r\n  return (typeof func === 'function');\r\n}\r\n\r\nfunction isArray(obj) {\r\n  return !!obj && typeof obj === 'object' && typeof obj.length === 'number';\r\n}\r\n\r\nfunction isPrimitive(o) {\r\n  return ['string', 'number', 'boolean', 'null', 'undefined'].indexOf(typeof o) > -1;\r\n}\r\n\r\nfunction isString(str) {\r\n  return typeof str === 'string';\r\n}\r\n\r\nfunction isBoolean(v) {\r\n  return typeof v === 'boolean';\r\n}\r\n\r\nfunction isNumber(v) {\r\n  return typeof v === 'number';\r\n}\r\n\r\nfunction isLikeJson(str) {\r\n  return isString(str) && str[0] === '{' && str.slice(-1) === '}';\r\n}\r\n\r\nfunction addClass(el, className) {\r\n  if (el.className.indexOf(className) === -1) {\r\n    el.className = trim(el.className) + ' ' + className;\r\n  }\r\n}\r\n\r\nfunction removeClass(el, className) {\r\n  if (el.className.indexOf(className) > -1) {\r\n    el.className = el.className.replace(new RegExp(className, 'g'), '');\r\n  }\r\n}\r\n\r\nfunction arrayRemove(arr, value) {\r\n  var len = arr.length;\r\n  for (var i = 0; i < len; i++) {\r\n    if (arr[i] === value) {\r\n      arr.splice(i--, 1);\r\n      len--;\r\n    }\r\n  }\r\n}\r\n\r\nfunction formatString() {\r\n  if (arguments.length < 2) return arguments[0];\r\n  var str = arguments[0],\r\n    args = Array.prototype.slice.call(arguments, 1);\r\n\r\n  return str.replace(/\\{(\\d+)\\}/g, function (match, n) {\r\n    return args[n];\r\n  });\r\n}\r\n\r\nfunction trim(str) {\r\n  if (typeof str === 'string') {\r\n    if (str.trim) {\r\n      return str.trim();\r\n    }\r\n    return str.replace(/^\\s+|\\s+$/g, '');\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nfunction each(arr, fn, skipArr) {\r\n  var len = arr.length, i = -1, item;\r\n  while (++i < len) {\r\n    item = arr[i];\r\n    if (isArray(skipArr)) {\r\n      if (skipArr.indexOf(item) !== -1) continue;\r\n    }\r\n\r\n    fn.call(arr, item, i, arr);\r\n  }\r\n}\r\n\r\nfunction filter(arr, predicate, multiple) {\r\n  var len = arr.length, i = -1, result = multiple ? [] : null;\r\n  while (++i < len) {\r\n    if (predicate.call(arr, arr[i], i, arr) === true) {\r\n      if (!multiple) {\r\n        return arr[i];\r\n      }\r\n      result.push(arr[i]);\r\n    }\r\n  }\r\n\r\n  return result && result.length > 0 ? result : null;\r\n}\r\n\r\nfunction isWatch(attr) {\r\n  return watchRegex.test(attr);\r\n}\r\n\r\nfunction isJsonAlike(str) {\r\n  if (isString(str)) {\r\n    return str.charAt(0) === '{' && str.slice(-1) === '}';\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction _def_const_prop_(obj, property, value) {\r\n  Object.defineProperty(obj, property,\r\n    {\r\n      value: value,\r\n      enumerable: false,\r\n      configurable: true,\r\n      writable: true\r\n    });\r\n}\r\n\r\n// poly fill \r\nif (!('remove' in Element.prototype)) {\r\n  Element.prototype.remove = function () {\r\n    if (this.parentNode) {\r\n      this.parentNode.removeChild(this);\r\n    }\r\n  };\r\n}\r\n\r\n// poly fill if ie \r\nfunction extend(target, varArgs) {\r\n  if (isFunction(Object.assign)) {\r\n    return Object.assign.apply(Object, arguments);\r\n  }\r\n  else {\r\n    var to = Object(target);\r\n    for (var index = 1; index < arguments.length; index++) {\r\n      var nextSource = arguments[index];\r\n      if (nextSource != null) { // Skip over if undefined or null\r\n        for (var nextKey in nextSource) {\r\n          if (hasOwnProperty.call(nextSource, nextKey)) {\r\n            to[nextKey] = nextSource[nextKey];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return to;\r\n  }\r\n}\r\n\r\nfunction notify(watchMap, watch, arrayChangeInfo) {\r\n  var renders = watchMap[watch],\r\n    len;\r\n  if (renders) {\r\n    each(renders, function (render) {\r\n      render.call(null, arrayChangeInfo);\r\n    });\r\n  }\r\n}\r\n\r\nfunction addEventListenerHandler(el, event, func, store) {\r\n  if (el.addEventListener && isFunction(func)) {\r\n    el.addEventListener(event, func, false);\r\n    store.push({\r\n      el: el,\r\n      event: event,\r\n      handler: func\r\n    });\r\n  }\r\n}\r\n\r\nfunction removeEventListenerHandler(el, event, func) {\r\n  if (el.removeEventListener && isFunction(func)) {\r\n    el.removeEventListener(event, func, false);\r\n  }\r\n}\r\n\r\n\r\n","function WatchedArray(watchMap, watch, arr) {\r\n  this.watchMap = watchMap;\r\n  this.watch = watch;\r\n  this.arr = arr;\r\n}\r\n\r\nWatchedArray.prototype = Object.create(null);\r\nWatchedArray.prototype.constructor = WatchedArray;\r\n\r\nWatchedArray.prototype.notify = function (arrayChangeInfo) {\r\n  notify(this.watchMap, this.watch, arrayChangeInfo);\r\n};\r\n\r\nWatchedArray.prototype.getArray = function () {\r\n  return this.arr.slice(0);\r\n};\r\n\r\nWatchedArray.prototype.at = function (index) {\r\n  return index >= 0 && index < this.arr.length && this.arr[index];\r\n};\r\n\r\neach(['push', 'pop', 'unshift', 'shift', 'reverse', 'sort', 'splice'], function (fn) {\r\n  WatchedArray.prototype[fn] = function () {\r\n    var ret = this.arr[fn].apply(this.arr, arguments);\r\n    this.notify([fn]);\r\n    return ret;\r\n  };\r\n});\r\n\r\nWatchedArray.prototype.each = function (fn, skips) {\r\n  var that = this.arr;\r\n  each(that, function () {\r\n    fn.apply(that, arguments);\r\n  }, skips)\r\n};\r\n\r\nWatchedArray.prototype.contain = function (item) {\r\n  return this.arr.indexOf(item) > -1;\r\n};\r\n\r\nWatchedArray.prototype.removeOne = function (item) {\r\n  var index = this.arr.indexOf(item);\r\n  if (index > -1) {\r\n    this.arr.splice(index, 1);\r\n    this.notify(['removeOne', index]);\r\n  }\r\n};\r\n\r\nWatchedArray.prototype.set = function (arr) {\r\n  this.arr.length = 0;\r\n  this.arr = arr;\r\n  this.notify();\r\n};","function bindHandler(linkContext) {\r\n  linkContext.el.textContent = evalLinkContext(linkContext);\r\n}","function classHandler(linkContext) {\r\n  var exprVal = evalLinkContext(linkContext);\r\n\r\n  if (linkContext.className) {\r\n    // json \r\n    if (!!exprVal) {\r\n      addClass(linkContext.el, linkContext.className);\r\n    }\r\n    else {\r\n      removeClass(linkContext.el, linkContext.className);\r\n    }\r\n  } else {\r\n    if (exprVal) {\r\n      addClass(linkContext.el, exprVal);\r\n    }\r\n  }\r\n}","function disabledHandler(linkContext) {\r\n  if (!!evalLinkContext(linkContext)) {\r\n    linkContext.el.setAttribute(\"disabled\", \"disabled\");\r\n  }\r\n  else {\r\n    linkContext.el.removeAttribute(\"disabled\");\r\n  }\r\n}","Link.prototype.filters = {\r\n  uppercase: String.prototype.toUpperCase,\r\n  lowercase: String.prototype.toLowerCase,\r\n  money: moneyFilter,\r\n  phone: phoneFilter\r\n};","function modelHandler(linkContext) {\r\n  var el = linkContext.el,\r\n    exprVal = evalLinkContext(linkContext);\r\n  if (el.type === 'radio') {\r\n    el.checked = (el.value === exprVal);\r\n  }\r\n  else if (el.type === 'checkbox') {\r\n    if (exprVal instanceof WatchedArray) {\r\n      el.checked = exprVal.arr.indexOf(el.value) > -1;\r\n    } else if (isBoolean(exprVal)) {\r\n      el.checked = exprVal;\r\n    } else {\r\n      throw linkError('checkbox should bind with array and boolean value');\r\n    }\r\n  }\r\n  else {\r\n    el.value != exprVal && (el.value = exprVal);\r\n  }\r\n}","function readonlyHandler(linkContext) {\r\n  if (!!evalLinkContext(linkContext)) {\r\n    linkContext.el.setAttribute(\"readonly\", \"readonly\");\r\n  }\r\n  else {\r\n    linkContext.el.removeAttribute(\"readonly\");\r\n  }\r\n}","function makeOneClonedLinkerForRepeater(linkContext, itemData, itemIndex) {\r\n  var cloneEl = linkContext.el.cloneNode(true),\r\n    model = linkContext.linker.model,\r\n    expr = linkContext.expr,\r\n    v = expr.split(/\\s+/)[0];\r\n  var props = {\r\n    $index: { value: itemIndex, enumerable: true, configurable: true, writable: true },\r\n    $$child: { value: true }\r\n  };\r\n  props[v] = { value: itemData, enumerable: true, configurable: true, writable: true };\r\n  return { el: cloneEl, linker: new Link(cloneEl, Object.create(model, props)) };\r\n}\r\n\r\nfunction repeatHandler(linkContext) {\r\n  var warr = $eval(linkContext.prop, linkContext.linker.model),\r\n    arr = warr && warr.arr,\r\n    el = linkContext.el,\r\n    comment = linkContext.comment,\r\n    lastArrayChangeInfo = linkContext.lastArraychange,\r\n    repeaterItem,\r\n    lastLinks = linkContext.lastLinks || [];\r\n\r\n  if (!linkContext.$$elRemovedFromDOM) {\r\n    comment = linkContext.comment = document.createComment('repeat end for ' + linkContext.prop);\r\n    el.parentNode.insertBefore(linkContext.comment, el);\r\n    el.remove();\r\n    linkContext.$$elRemovedFromDOM = true;\r\n  }\r\n\r\n  function rebuild() {\r\n    var docFragment = document.createDocumentFragment();\r\n    each(lastLinks, function (link) {\r\n      link.unlink();\r\n    });\r\n\r\n    lastLinks.length = 0;\r\n    lastLinks = [];\r\n    each(arr, function (itemData, index) {\r\n      repeaterItem = makeOneClonedLinkerForRepeater(linkContext, itemData, index);\r\n      lastLinks.push(repeaterItem.linker);\r\n      docFragment.appendChild(repeaterItem.el);\r\n    });\r\n\r\n    comment.parentNode.insertBefore(docFragment, comment);\r\n  }\r\n\r\n  if (lastLinks.length > 0 && lastArrayChangeInfo) {\r\n    var fn = lastArrayChangeInfo[0],\r\n      itemData,\r\n      _linker;\r\n    switch (fn) {\r\n      case 'push': {\r\n        itemData = arr[arr.length - 1];\r\n        repeaterItem = makeOneClonedLinkerForRepeater(linkContext, itemData, index);\r\n        lastLinks.push(repeaterItem.linker);\r\n        comment.parentNode.insertBefore(repeaterItem.el, comment);\r\n        break;\r\n      }\r\n      case 'pop': {\r\n        _linker = lastLinks.pop();\r\n        _linker.unlink();\r\n        break;\r\n      }\r\n      case 'removeOne': {\r\n        var index = lastArrayChangeInfo[1];\r\n        _linker = lastLinks.splice(index, 1)[0];\r\n        _linker.unlink();\r\n        break;\r\n      }\r\n      case 'unshift': {\r\n        var firstLinkerEl = lastLinks[0].el;\r\n        itemData = arr[0];\r\n        repeaterItem = makeOneClonedLinkerForRepeater(linkContext, itemData, index);\r\n        lastLinks.unshift(repeaterItem.linker);\r\n        firstLinkerEl.parentNode.insertBefore(repeaterItem.el, firstLinkerEl);\r\n        break;\r\n      }\r\n      case 'shift': {\r\n        _linker = lastLinks.shift();\r\n        _linker.unlink();\r\n        break;\r\n      }\r\n      default: {\r\n        // clear all and rebuild \r\n        rebuild();\r\n      }\r\n    }\r\n\r\n  } else {\r\n    rebuild();\r\n  }\r\n\r\n  linkContext.lastLinks = lastLinks;\r\n}","function showHideHandler(linkContext) {\r\n  var el = linkContext.el,\r\n    directive = linkContext.directive,\r\n    boolValue = !!evalLinkContext(linkContext);\r\n  if (directive === SHOW && boolValue\r\n    || directive === HIDE && !boolValue) {\r\n    removeClass(el, 'x-hide');\r\n  }\r\n  else {\r\n    addClass(el, 'x-hide');\r\n  }\r\n}","\r\nfunction checkboxReact(linkContext) {\r\n  var el = linkContext.el;\r\n  function checkboxHandler() {\r\n    var value = el.value,\r\n      checked = el.checked,\r\n      propValue = evalLinkContext(linkContext);\r\n\r\n    if (!(isBoolean(propValue) || propValue instanceof WatchedArray)) {\r\n      throw linkError('checkbox should bind with array or boolean value');\r\n    }\r\n\r\n    if (propValue instanceof WatchedArray) {\r\n      if (!checked && propValue.contain(value)) {\r\n        propValue.removeOne(value);\r\n      }\r\n      else {\r\n        propValue.push(value);\r\n      }\r\n    }\r\n    else {\r\n      setWatchValue(linkContext.prop, checked, linkContext.linker.model);\r\n    }\r\n  }\r\n  addEventListenerHandler(el, 'click', checkboxHandler, linkContext.linker.eventStore);\r\n}\r\n","function commonReact(linkContext, event) {\r\n  var el = linkContext.el;\r\n  function commonHandler() {\r\n    setWatchValue(linkContext.prop, el.value || '', linkContext.linker.model);\r\n  }\r\n  addEventListenerHandler(el, event, commonHandler, linkContext.linker.eventStore);\r\n}","function moneyFilter(str) {\r\n  if (!Number(str)) return str;\r\n  str = str + '';\r\n  var digit = [],\r\n    decimals = '',\r\n    pointIndex = -1,\r\n    groups = [],\r\n    sep = ',';\r\n  if ((pointIndex = str.indexOf('.')) > -1) {\r\n    digit = str.slice(0, pointIndex).split('');\r\n    decimals = str.slice(pointIndex);\r\n  }\r\n  else {\r\n    digit = str.split('');\r\n  }\r\n  do {\r\n    groups.unshift(digit.splice(-3).join(''));\r\n  } while (digit.length > 0)\r\n\r\n  return groups.join(sep) + decimals;\r\n}","function phoneFilter(str) {\r\n  //the middle 4 digit replace with *\r\n  if (isString(str) && str.length === 11) {\r\n    return str.slice(0, 3) + '****' + str.slice(-4);\r\n  }\r\n\r\n  return str;\r\n}","function Link(el, data, behaviors, routeConfig) {\r\n  this.model = data;\r\n  this.el = el;\r\n  this.behaviors = behaviors;\r\n  this.eventStore = []; // store event bind info \r\n  this.linkContextCollection = []; // store linkContext\r\n  this.watchMap = Object.create(null); // stores watch and watchfn map\r\n  this.routeEl = null; // route template string container if it exists,it is not required.\r\n  this.bootstrap();\r\n\r\n  if (routeConfig) {\r\n    configRoutes(this, routeConfig.routes, routeConfig.defaultPath);\r\n  }\r\n};\r\n","Link.prototype.addBehaviors = function addBehaviors() {\r\n  var that = this;\r\n  if (isObject(this.behaviors)) {\r\n    var methods = Object.keys(this.behaviors);\r\n    each(methods, function (fn) {\r\n      if (isFunction(that.behaviors[fn])) {\r\n        if ((fn in that.model) && !isFunction(that.model[fn])) {\r\n          throw linkError('{0} is defined in the data model,please change the function/method name of \"{0}\"', fn)\r\n        }\r\n        if (!that.model[fn]) {\r\n          that.model[fn] = that.behaviors[fn];\r\n        }\r\n      }\r\n    });\r\n  }\r\n};","Link.prototype.bootstrap = function () {\r\n  if (this.model.hasOwnProperty('$$watched')) {\r\n    throw linkError('this model had been used for some linker, please check...');\r\n  }\r\n  _def_const_prop_(this.model, '$$watched', true);\r\n  this.watchModel(this.model, []);\r\n  this.compile(this.el);\r\n  this.render();\r\n  this.addBehaviors();\r\n};\r\n","Link.prototype.getLinkContextsFromInterpolation = function getLinkContextsFromInterpolation(el, text) {\r\n  var expr = ['\"', text, '\"'].join('').replace(/(\\{\\{)/g, '\"+(').replace(/(\\}\\})/g, ')+\"');\r\n  var lexer = new Lexer(expr),\r\n    watches = lexer.getWatches(),\r\n    that = this;\r\n  if (lexer.filterIndex > -1) {\r\n    throw linkError('{0} does not support filter for {1} , please use {2} instead',\r\n      'link', 'interpolation expression', BIND);\r\n  }\r\n\r\n  each(watches, function (watch) {\r\n    that.addLinkContextAndSetWatch(el, watch, BIND, expr);\r\n  });\r\n};\r\n\r\nLink.prototype.addLinkContextAndSetWatch = function addLinkContextAndSetWatch(el, watches, directive, expr, filter) {\r\n  var linkContext = LinkContext.create(el, watches, directive, expr, this);\r\n  if (filter) {\r\n    linkContext.filter = filter;\r\n  }\r\n  this.linkContextCollection.push(linkContext);\r\n  this.addWatchNotify(linkContext);\r\n  if (directive === MODEL) {\r\n    modelReactDispatch(linkContext);\r\n  }\r\n};\r\n\r\nLink.prototype.getEventLinkContext = function getEventLinkContext(el, attrName, fn) {\r\n  var eventLinkContext;\r\n  var event = eventDirectiveRegex.exec(attrName)[1];\r\n  //done: fn could be fnc name , fnc(), fnc(args..) and null(with expr)\r\n  if (fnRegex.test(fn)) {\r\n    // fn\r\n    eventLinkContext = EventLinkContext.create(el, event, fn);\r\n  }\r\n  else if (fnCallRegex.test(fn)) {\r\n    // fn()\r\n    var leftBracketIndex = fn.indexOf('(');\r\n    eventLinkContext = EventLinkContext.create(el, event, fn.slice(0, leftBracketIndex));\r\n  }\r\n  else if (fnCallParamsRegex.test(fn)) {\r\n    // fn(a,b,c)\r\n    var args = fn.match(fnCallParamsRegex)[1].split(',');\r\n    var leftBracketIndex = fn.indexOf('(');\r\n    eventLinkContext = EventLinkContext.create(el, event, fn.slice(0, leftBracketIndex), args);\r\n  }\r\n  else {\r\n    // expr\r\n    eventLinkContext = EventLinkContext.create(el, event, null, fn);\r\n  }\r\n\r\n  this.bindEventLinkContext(eventLinkContext);\r\n};\r\n\r\nLink.prototype.getClassLinkContext = function getClassLinkContext(el, directive, expr) {\r\n  var\r\n    kvPairs = expr.slice(1, -1).split(','),\r\n    className,\r\n    subExpr,\r\n    spliter,\r\n    lexer,\r\n    watch,\r\n    linkContext,\r\n    that = this;\r\n\r\n  each(kvPairs, function (kv) {\r\n    spliter = kv.split(':');\r\n    className = spliter[0].replace(/[\\'\\\"]/g, ''),\r\n      subExpr = spliter[1];\r\n\r\n    if (isWatch(subExpr)) {\r\n      linkContext = LinkContext.create(el, subExpr, directive, subExpr, that);\r\n    }\r\n    else {\r\n      lexer = new Lexer(subExpr);\r\n      watch = lexer.getWatches();\r\n\r\n      each(watch, function (w) {\r\n        linkContext = LinkContext.create(el, w, directive, subExpr, that);\r\n      });\r\n    }\r\n    linkContext.className = className;\r\n    that.linkContextCollection.push(linkContext);\r\n    that.addWatchNotify(linkContext);\r\n  });\r\n};\r\n\r\n\r\nLink.prototype.getLinkContext = function getLinkContext(el, directive, expr) {\r\n  if (isWatch(expr)) {\r\n    this.addLinkContextAndSetWatch(el, expr, directive, expr);\r\n  }\r\n  else if (isLikeJson(expr)) {\r\n    this.getClassLinkContext(el, directive, expr);\r\n  }\r\n  else {\r\n    var lexer = new Lexer(expr),\r\n      watches = lexer.getWatches();\r\n    if (lexer.filter) {\r\n      expr = expr.slice(0, lexer.filterIndex);\r\n      this.addLinkContextAndSetWatch(el, watches, directive, expr, lexer.filter);\r\n    }\r\n    else\r\n      this.addLinkContextAndSetWatch(el, watches, directive, expr);\r\n  }\r\n};\r\n\r\nLink.prototype.compileDOM = function compileDOM(el) {\r\n  var attrName,\r\n    attrValue,\r\n    that = this;\r\n  if (el.nodeType === 1 && el.hasAttributes()) {\r\n    each(el.attributes, function (attr) {\r\n      attrName = attr.name;\r\n      attrValue = trim(attr.value);\r\n      if (eventDirectiveRegex.test(attrName)) {\r\n        that.getEventLinkContext(el, attrName, attrValue);\r\n      }\r\n      else if (directives.indexOf(attrName) > -1) {\r\n        that.getLinkContext(el, attrName, attrValue);\r\n      }\r\n    });\r\n  } else if (el.nodeType === 3) {\r\n    var expr = trim(el.textContent);\r\n    if (expr && /\\{\\{[^\\}]+\\}\\}/.test(expr)) {\r\n      this.getLinkContextsFromInterpolation(el, expr);\r\n    }\r\n  }\r\n};\r\n\r\nLink.prototype.compile = function compile(el) {\r\n  var that = this;\r\n  if (el.nodeType === 1) {\r\n    if (el.hasAttribute(REPEAT)) {\r\n      var expr = trim(el.getAttribute(REPEAT)), // var in watch\r\n        w = expr.split(/\\s+/);\r\n      if (w.length !== 3) throw linkError('repeat only support expr like: var in array.');\r\n      this.addLinkContextAndSetWatch(el, w[2], REPEAT, expr);\r\n      el.removeAttribute(REPEAT);\r\n      return;\r\n    }\r\n\r\n    if (el.hasAttribute(VIEW)) {\r\n      if (this.routeEl) throw linkError('a link context can only have on more than one x-view');\r\n      el.removeAttribute(VIEW);\r\n      this.routeEl = el;\r\n      return;\r\n    }\r\n  }\r\n  this.compileDOM(el);\r\n  el.hasChildNodes() && each(el.childNodes, function (node) {\r\n    that.compile(node);\r\n  });\r\n};\r\n","function linkError() {\r\n  var error = formatString.apply(null, arguments);\r\n  return new Error(error);\r\n}","function $eval(expr, $this) {\r\n  var fn = new Function('with(this){return ' + expr + ';}');\r\n  try {\r\n    return fn.call($this);\r\n  } catch (ex) {\r\n    throw linkError('invalid expr {0}.', expr);\r\n  }\r\n}\r\n\r\nfunction evalLinkContext(linkContext) {\r\n  var val = $eval(linkContext.expr, linkContext.linker.model);\r\n\r\n  if (linkContext.filter && linkContext.directive === BIND) {\r\n    var filters = linkContext.linker.filters,\r\n      filter = linkContext.filter;\r\n    if (filters[filter]) {\r\n      val = filters[filter].call(val, val);\r\n    }\r\n  }\r\n\r\n  return val;\r\n}\r\n\r\nfunction setWatchValue(watch, value, model) {\r\n  if (value === null) {\r\n    value = 'null';\r\n  }\r\n  else if (typeof (value) === 'undefined') {\r\n    value = 'undefined';\r\n  }\r\n  var expr = '';\r\n  if (isString(value)) {\r\n    expr = [watch, '=', \"'\", value, \"'\"].join('');\r\n  }\r\n  else if (isPrimitive(value)) {\r\n    expr = [watch, '=', value].join('');\r\n  }\r\n  else {\r\n    throw linkError('value should be a primitive type for setWatchValue');\r\n  }\r\n\r\n  $eval(expr, model);\r\n}\r\n","Link.prototype.bindEventLinkContext = function bindcontext(context) {\r\n  var context = context,\r\n    linker = this;\r\n\r\n  var func = function (ev) {\r\n    var el = context.el,\r\n      fn = context.fn,\r\n      args = context.args; // when fn is null, args is expr to eval.\r\n\r\n    if (fn === null) {\r\n      // expr \r\n      $eval(args, linker.model);\r\n    } else if (linker.model[fn]) {\r\n      if (!isArray(args)) {\r\n        linker.model[fn].apply(linker.model, [ev, el]);\r\n      }\r\n      else {\r\n        var eargs = [ev, el];\r\n        var evaledArgs = [];\r\n        each(args, function (arg) {\r\n          arg = trim(arg);\r\n          if (arg.charAt(0) === \"'\" || arg.charAt(0) === '\"') {\r\n            evaledArgs.push(arg.replace(quoteRegx, ''));\r\n          } else {\r\n            evaledArgs.push($eval(arg, linker.model));\r\n          }\r\n        });\r\n        unshift.apply(eargs, evaledArgs);\r\n        linker.model[fn].apply(linker.model, eargs);\r\n      }\r\n\r\n    }\r\n  };\r\n\r\n  addEventListenerHandler(context.el, context.event, func, this.eventStore);\r\n};\r\n\r\n\r\n\r\n","function LinkContext(el, watches, directive, expr, linker) {\r\n  this.el = el;\r\n  this.prop = watches; // string, or string array of watches\r\n  this.directive = directive;\r\n  this.expr = expr; \r\n  this.linker = linker;\r\n}\r\n\r\nfunction EventLinkContext(el, event, fn, args) {\r\n  this.el = el;\r\n  this.event = event;\r\n  this.fn = fn; // fn name\r\n  this.args = args; // arguments pass by event directive\r\n}\r\n\r\nLinkContext.create = function (el, watches, directive, expr, linker) {\r\n  return new LinkContext(el, watches, directive, expr, linker);\r\n};\r\n\r\nEventLinkContext.create = function (el, event, fn, args) {\r\n  return new EventLinkContext(el, event, fn, args);\r\n};\r\n","Link.prototype.defineObserver = function defineObserver(model, prop, value, propStack, isArray) {\r\n  var that = this,\r\n    watch = concat.call(propStack, prop).join('.');\r\n  if (!isArray) {\r\n    Object.defineProperty(model, prop, {\r\n      get: function () {\r\n        return value;\r\n      },\r\n      set: function (newVal) {\r\n        if (newVal !== value) {\r\n          value = newVal;\r\n          notify(that.watchMap, watch);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  else {\r\n    model[prop] = new WatchedArray(that.watchMap, watch, value);\r\n  }\r\n};\r\n\r\nLink.prototype.watchModel = function watchModel(model, propStack) {\r\n  var props = Object.keys(model),\r\n    prop,\r\n    value,\r\n    that = this;\r\n  each(props, function (prop) {\r\n    value = model[prop];\r\n    if (isObject(value) && !isArray(value)) {\r\n      propStack.push(prop);\r\n      that.watchModel(value, propStack);\r\n      propStack.pop();\r\n    }\r\n    else {\r\n      that.defineObserver(model, prop, value, propStack.slice(0), isArray(value));\r\n    }\r\n  });\r\n};","function Lexer(text) {\r\n  this.text = text;\r\n  this.index = 0;\r\n  this.len = text.length;\r\n  this.watches = [];\r\n  this.filter = null;\r\n  this.filterIndex = -1;\r\n  this.filterEndIndex = -1;\r\n}\r\n\r\nLexer.prototype = {\r\n  constructor: Lexer,\r\n  getWatches: function () {\r\n    while (this.index < this.len) {\r\n      var ch = this.text[this.index];\r\n      if (watchStartRegex.test(ch)) {\r\n        this._getWatch(ch);\r\n      }\r\n      else if (ch === '\"' || ch === \"'\") {\r\n        // string \r\n        while (this._peek() !== ch && this.index < this.len) {\r\n          this.index++;\r\n        }\r\n        if (this.index + 1 < this.len) {\r\n          this.index += 2;\r\n        } else {\r\n          throw new Error('unclosed string in expr');\r\n        }\r\n      }\r\n      else if (ch === '|') {\r\n        if (this._peek() !== '|') {\r\n          //filter sign\r\n          this.filterIndex = this.index++;\r\n          this._getFilter();\r\n          break; // following chars don't need going on.\r\n        }\r\n        else {\r\n          // || \r\n          this.index += 2;\r\n        }\r\n      }\r\n      else {\r\n        this.index++;\r\n      }\r\n    }\r\n\r\n    return this.watches;\r\n  },\r\n  _getFilter: function () {\r\n    // last index is | \r\n    var filter = [this.text[this.index]];\r\n    while (this.index < this.len) {\r\n      if (validWatchChar.test(this._peek())) {\r\n        filter.push(this.text[++this.index]);\r\n      }\r\n      else {\r\n        this.index++;\r\n        break;\r\n      }\r\n    }\r\n    this.filterEndIndex = this.index;\r\n    this.filter = trim(filter.join(''));\r\n  },\r\n  _getWatch: function (ch) {\r\n    var watch = [ch],\r\n      start = this.index;\r\n    while (this.index < this.len) {\r\n      if (validWatchChar.test(this._peek())) {\r\n        watch.push(this.text[++this.index]);\r\n      } else {\r\n        this.index++;\r\n        break;\r\n      }\r\n    }\r\n    this.watches.push(watch.join(''));\r\n  },\r\n\r\n  _peek: function (i) {\r\n    i = i || 1;\r\n    return (this.index + i < this.len) ? this.text[this.index + 1] : false;\r\n  }\r\n};","\r\nLink.prototype.setModel = function setModel(newModel) {\r\n  this.model = newModel;\r\n  this.watchModel(this.model);\r\n  this.compile(this.el);\r\n  this.render();\r\n};\r\n\r\nLink.prototype.unlink = function unlink() {\r\n  this.linkContextCollection = null;\r\n  this.watchMap = null;\r\n  // clean event binding \r\n  each(this.eventStore, function (event) {\r\n    removeEventListenerHandler(event.el, event.event, event.handler);\r\n  });\r\n  this.eventStore = null;\r\n  if (this.model.$$child) {\r\n    this.el.remove();\r\n  }\r\n  delete this.model.$$watched;\r\n  this.model = null;\r\n};\r\n\r\n// if the model contains array property ,it will be wrapped, this fn get the origin model back\r\nfunction unWrapModel(model, dest) {\r\n  dest = dest || {};\r\n  var props = Object.keys(model),\r\n    value;\r\n  each(props, function (prop) {\r\n    value = model[prop];\r\n    if (value instanceof WatchedArray) {\r\n      dest[prop] = value.getArray();\r\n    }\r\n    else if (isObject(value)) {\r\n      dest[prop] = {};\r\n      unWrapModel(value, dest[prop]);\r\n    }\r\n    else {\r\n      if (!isFunction(value)) {\r\n        dest[prop] = model[prop];\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nLink.prototype.getModel = function getModel() {\r\n  var _model = {};\r\n  unWrapModel(this.model, _model);\r\n  return _model;\r\n};\r\n","\r\nLink.prototype.addWatchNotify = function addWatchNotify(linkContext) {\r\n  var that = this;\r\n  if (isArray(linkContext.prop)) {\r\n    each(linkContext.prop, function (watch) {\r\n      that.addNofityHandler(watch, linkContext);\r\n    });\r\n  }\r\n\r\n  else {\r\n    that.addNofityHandler(linkContext.prop, linkContext);\r\n  }\r\n};\r\n\r\nLink.prototype.addNofityHandler = function addNofityHandler(watch, linkContext) {\r\n  if (!this.watchMap[watch]) {\r\n    this.watchMap[watch] = [];\r\n  }\r\n  this.watchMap[watch].push(notifyFnFactory(linkContext));\r\n};\r\n\r\nLink.prototype.render = function render() {\r\n  for (var watch in this.watchMap) {\r\n    notify(this.watchMap, watch);\r\n  }\r\n};\r\n\r\nfunction notifyFnFactory(linkContext) {\r\n  /**\r\n   * 1. this is  directive render fn \r\n   * 2.change has value when it's watcharray change\r\n   *  */\r\n  return function (change) {\r\n    change && (linkContext.lastArraychange = change);\r\n    renderLink(linkContext);\r\n  };\r\n}\r\n\r\nfunction renderLink(linkContext) {\r\n  DIRETIVE_RENDER_MAP[linkContext.directive].call(null, linkContext);\r\n}","/**\r\n * x-router based on old browser hash   \r\n*/\r\nfunction hash(path) {\r\n  if (typeof path === 'undefined') {\r\n    var href = location.href,\r\n      index = href.indexOf('#');\r\n    return index === -1 ? '' : href.slice(index + 1)\r\n  }\r\n  else {\r\n    location.hash = path;\r\n  }\r\n}\r\n\r\nfunction replaceHash(path) {\r\n  var href = location.href,\r\n    index = href.indexOf('#');\r\n  if (index > -1) {\r\n    location.replace(href.slice(0, index) + '#' + path);\r\n  }\r\n  else {\r\n    location.replace(href + '#' + path);\r\n  }\r\n}\r\n\r\nvar templateStore = Object.create(null);\r\n\r\nfunction loadTemplate(url, cb) {\r\n  var tpl = templateStore[url];\r\n  if (tpl) {\r\n    cb.call(null, tpl);\r\n  }\r\n  else {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange = function () {\r\n      if (xhr.readyState === XMLHttpRequest.DONE) {\r\n        if (xhr.status === 200) {\r\n          templateStore[url] = xhr.responseText;\r\n          cb.call(null, xhr.responseText);\r\n        }\r\n      }\r\n    };\r\n\r\n    xhr.open('GET', url, true);\r\n    xhr.setRequestHeader('Accept', 'text/html');\r\n    xhr.send(null);\r\n  }\r\n}\r\n\r\n/**\r\n  var routes = {\r\n    'path':{\r\n       model: {},\r\n       methods:{},\r\n       template: '',\r\n       templateUrl: '',\r\n       preLink:fn,\r\n       postLink:fn\r\n    }\r\n  }];\r\n*/\r\nfunction configRoutes(linker, routes, defaultPath) {\r\n  addEventListenerHandler(window, 'hashchange', renderRouter, linker.eventStore);\r\n  var hs = hash();\r\n  if (hs) {\r\n    renderRouter();\r\n  }\r\n  else {\r\n    replaceHash(defaultPath);\r\n  }\r\n  function renderRouter() {\r\n    var route = routes[hash()];\r\n    if (!route) {\r\n      replaceHash(defaultPath);\r\n      return;\r\n    }\r\n    if (!route.model || !isObject(route.model)) {\r\n      route.model = {};\r\n    }\r\n    var template = trim(route.template);\r\n    if (!template) {\r\n      if (route.templateUrl) {\r\n        loadTemplate(route.templateUrl, function (tpl) {\r\n          linkRoute(linker, route, tpl);\r\n        });\r\n      } else {\r\n        linkRoute(linker, route, '');\r\n      }\r\n    } else {\r\n      linkRoute(linker, route, template);\r\n    }\r\n  }\r\n}\r\n\r\nfunction linkRoute(linker, route, tpl) {\r\n  var preLinkReturn;\r\n  if (linker.routeEl) {\r\n    linker.routeEl.innerHTML = tpl;\r\n  }\r\n  if (route.lastLinker) {\r\n    route.lastLinker.unlink(); // destroy link\r\n  }\r\n  if (isFunction(route.preLink)) {\r\n    preLinkReturn = route.preLink.call(route, linker);\r\n  }\r\n  if (preLinkReturn && isFunction(preLinkReturn.then)) {\r\n    preLinkReturn.then(traceLink);\r\n  } else {\r\n    if (preLinkReturn === false) return;// skip link\r\n    traceLink();\r\n  }\r\n\r\n  function traceLink() {\r\n    if (!linker.routeEl) return; // no x-view , no route link \r\n    route.lastLinker = link({\r\n      el: linker.routeEl,\r\n      model: route.model,\r\n      methods: route.methods,\r\n    });\r\n    if (isFunction(route.postLink)) {\r\n      route.postLink.call(route, route.lastLinker);\r\n    }\r\n  }\r\n}","\r\nvar style = document.createElement('style');\r\nstyle.type = 'text/css';\r\nstyle.textContent = '.x-hide{display:none !important;}';\r\ndocument.head.insertAdjacentElement('afterBegin', style);\r\n\r\n}\r\n)();"]}