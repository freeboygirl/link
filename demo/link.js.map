{"version":3,"sources":["link.prefix.js","var.js","helper.js","watchArray.js","bind.js","class.js","disable.js","index.js","model.js","repeat.js","showhide.js","checkbox.js","common.js","money.js","phone.js","Link.js","behaviors.js","bootstrap.js","compile.js","error.js","eval.js","event.js","linkContext.js","observer.js","parse.js","public.js","watchNotify.js","route.js","link.suffix.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfrLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpDA;AACA;AACA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACljCA;AACA;AACA;AACA;AACA;AACA;AMLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxfile":"link.js","sourcesContent":["'use strict';\n(function () {\n  window.link = function linkFactory(config) {\n    config = extend({}, { el: window.document, model: {}, methods: null, routes: null }, config);\n    return new Link(config.el, config.model, config.methods, config.routes);\n  };\n  link.helper = {\n    isObject: isObject,\n    isFunction: isFunction,\n    isArray: isArray,\n    addClass: addClass,\n    removeClass: removeClass,\n    arrayRemove: arrayRemove,\n    formatString: formatString,\n    trim: trim,\n    each: each,\n    hash: hash\n  };\n\n  link.filter = function (name, fn) {\n    if (!Link.prototype.filters[name] && isFunction(fn)) {\n      Link.prototype.filters[name] = fn;\n    }\n  };","var\n  interpolationRegex = /\\{\\{(\\$?[^\\}]+)\\}\\}/g,\n  watchRegex = /^\\$?\\w+(\\.?\\w+)*$/,\n  eventDirectiveRegex = /^x-on-(\\w+)$/, // x-on- with native dom event name to bind event handler \n  directives = ['x-bind', 'x-model', 'x-repeat', 'x-show', 'x-hide', 'x-class', 'x-disabled', 'x-view'],\n  REPEATER = 'x-repeat',\n  VIEW = 'x-view',\n  fnRegex = /^[a-zA-Z$_]\\w*$/,\n  fnCallRegex = /^[a-zA-Z$_]\\w*\\(\\s*\\)$/,\n  fnCallParamsRegex = /^[a-zA-Z$_]\\w*\\(([^\\)]+)\\)$/,\n  unshift = Array.prototype.unshift,\n  quoteRegx = /[\\'\\\"]/g,\n  watchStartRegex = /[a-zA-Z$_]/,\n  validWatchChar = /[a-zA-Z0-9$\\.]/,\n  hasOwnProperty = Object.prototype.hasOwnProperty,\n  concat = Array.prototype.concat;","function isObject(obj) {\n  return !!obj && typeof obj === 'object'\n}\n\nfunction isFunction(func) {\n  return (typeof func === 'function');\n}\n\nfunction isArray(obj) {\n  return !!obj && typeof obj === 'object' && typeof obj.length === 'number';\n}\n\nfunction isPrimitive(o) {\n  return ['string', 'number', 'boolean', 'null', 'undefined'].indexOf(typeof o) > -1;\n}\n\nfunction isString(str) {\n  return typeof str === 'string';\n}\n\nfunction isBoolean(v) {\n  return typeof v === 'boolean';\n}\n\nfunction isNumber(v) {\n  return typeof v === 'number';\n}\n\nfunction isLikeJson(str) {\n  return isString(str) && str[0] === '{' && str.slice(-1) === '}';\n}\n\nfunction addClass(el, className) {\n  if (el.className.indexOf(className) === -1) {\n    el.className = trim(el.className) + ' ' + className;\n  }\n}\n\nfunction removeClass(el, className) {\n  if (el.className.indexOf(className) > -1) {\n    el.className = el.className.replace(new RegExp(className, 'g'), '');\n  }\n}\n\nfunction arrayRemove(arr, value) {\n  var len = arr.length;\n  for (var i = 0; i < len; i++) {\n    if (arr[i] === value) {\n      arr.splice(i, 1);\n      len--;\n    }\n  }\n}\n\nfunction formatString() {\n  if (arguments.length < 2) return arguments[0];\n  var str = arguments[0],\n    args = Array.prototype.slice.call(arguments, 1);\n\n  return str.replace(/\\{(\\d+)\\}/g, function (match, n) {\n    return args[n];\n  });\n}\n\nfunction trim(str) {\n  if (typeof str === 'string') {\n    if (str.trim) {\n      return str.trim();\n    }\n    return str.replace(/^\\s+|\\s+$/g, '');\n  }\n\n  return str;\n}\n\nfunction each(arr, fn, skipArr) {\n  var len = arr.length, i = -1, item;\n  while (++i < len) {\n    item = arr[i];\n    if (isArray(skipArr)) {\n      if (skipArr.indexOf(item) !== -1) continue;\n    }\n\n    fn.call(arr, item, i, arr);\n  }\n}\n\nfunction filter(arr, predicate, multiple) {\n  var len = arr.length, i = -1, result = multiple ? [] : null;\n  while (++i < len) {\n    if (predicate.call(arr, arr[i], i, arr) === true) {\n      if (!multiple) {\n        return arr[i];\n      }\n      result.push(arr[i]);\n    }\n  }\n\n  return result && result.length > 0 ? result : null;\n}\n\nfunction isWatch(attr) {\n  return watchRegex.test(attr);\n}\n\nfunction isJsonAlike(str) {\n  if (isString(str)) {\n    return str.charAt(0) === '{' && str.slice(-1) === '}';\n  }\n\n  return false;\n}\n\nfunction _def_const_prop_(obj, property, value) {\n  Object.defineProperty(obj, property,\n    {\n      value: value,\n      enumerable: false,\n      configurable: true,\n      writable: true\n    });\n}\n\n// poly fill \nif (!('remove' in Element.prototype)) {\n  Element.prototype.remove = function () {\n    if (this.parentNode) {\n      this.parentNode.removeChild(this);\n    }\n  };\n}\n\n// poly fill if ie \nfunction extend(target, varArgs) {\n  if (isFunction(Object.assign)) {\n    return Object.assign.apply(Object, arguments);\n  }\n  else {\n    var to = Object(target);\n    for (var index = 1; index < arguments.length; index++) {\n      var nextSource = arguments[index];\n      if (nextSource != null) { // Skip over if undefined or null\n        for (var nextKey in nextSource) {\n          if (hasOwnProperty.call(nextSource, nextKey)) {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n    return to;\n  }\n}\n\nfunction notify(watchMap, watch, arrayChangeInfo) {\n  var renders = watchMap[watch],\n    len;\n  if (renders) {\n    each(renders, function (render) {\n      render.call(null, arrayChangeInfo);\n    });\n  }\n}\n\nfunction addEventListenerHandler(el, event, func, store) {\n  if (el.addEventListener && isFunction(func)) {\n    el.addEventListener(event, func, false);\n    store.push({\n      el: el,\n      event: event,\n      handler: func\n    });\n  }\n}\n\nfunction removeEventListenerHandler(el, event, func) {\n  if (el.removeEventListener && isFunction(func)) {\n    el.removeEventListener(event, func, false);\n  }\n}\n\n\n","function WatchedArray(watchMap, watch, arr) {\n  this.watchMap = watchMap;\n  this.watch = watch;\n  this.arr = arr;\n}\n\nWatchedArray.prototype = Object.create(null);\nWatchedArray.prototype.constructor = WatchedArray;\n\nWatchedArray.prototype.notify = function (arrayChangeInfo) {\n  notify(this.watchMap, this.watch, arrayChangeInfo);\n};\n\nWatchedArray.prototype.getArray = function () {\n  return this.arr.slice(0);\n};\n\nWatchedArray.prototype.at = function (index) {\n  return index >= 0 && index < this.arr.length && this.arr[index];\n};\n\neach(['push', 'pop', 'unshift', 'shift', 'reverse', 'sort', 'splice'], function (fn) {\n  WatchedArray.prototype[fn] = function () {\n    var ret = this.arr[fn].apply(this.arr, arguments);\n    this.notify([fn]);\n    return ret;\n  };\n});\n\nWatchedArray.prototype.each = function (fn, skips) {\n  var that = this.arr;\n  each(that, function () {\n    fn.apply(that, arguments);\n  }, skips)\n};\n\nWatchedArray.prototype.contain = function (item) {\n  return this.arr.indexOf(item) > -1;\n};\n\nWatchedArray.prototype.removeOne = function (item) {\n  var index = this.arr.indexOf(item);\n  if (index > -1) {\n    this.arr.splice(index, 1);\n    this.notify(['removeOne', index]);\n  }\n};\n\nWatchedArray.prototype.set = function (arr) {\n  this.arr.length = 0;\n  this.arr = arr;\n  this.notify();\n};","function bindHandler(linkContext) {\n  linkContext.el.textContent = evalLinkContext(linkContext);\n}","function classHandler(linkContext) {\n  var exprVal = evalLinkContext(linkContext);\n\n  if (linkContext.className) {\n    // json \n    if (!!exprVal) {\n      addClass(linkContext.el, linkContext.className);\n    }\n    else {\n      removeClass(linkContext.el, linkContext.className);\n    }\n  } else {\n    if (exprVal) {\n      addClass(linkContext.el, exprVal);\n    }\n  }\n}","function disabledHandler(linkContext) {\n  if (!!evalLinkContext(linkContext)) {\n    linkContext.el.setAttribute(\"disabled\", \"disabled\");\n  }\n  else {\n    linkContext.el.removeAttribute(\"disabled\");\n  }\n}","Link.prototype.filters = {\n  uppercase: String.prototype.toUpperCase,\n  lowercase: String.prototype.toLowerCase,\n  money: moneyFilter,\n  phone: phoneFilter\n};","function modelHandler(linkContext) {\n  var el = linkContext.el,\n    exprVal = evalLinkContext(linkContext);\n  if (el.type === 'radio') {\n    el.checked = (el.value === exprVal);\n  }\n  else if (el.type === 'checkbox') {\n    if (exprVal instanceof WatchedArray) {\n      el.checked = exprVal.arr.indexOf(el.value) > -1;\n    } else if (isBoolean(exprVal)) {\n      el.checked = exprVal;\n    } else {\n      throw linkError('checkbox should bind with array and boolean value');\n    }\n  }\n  else {\n    el.value != exprVal && (el.value = exprVal);\n  }\n}","function makeOneClonedLinkerForRepeater(linkContext, itemData, itemIndex) {\n  var cloneEl = linkContext.el.cloneNode(true),\n    model = linkContext.linker.model,\n    expr = linkContext.expr,\n    v = expr.split(/\\s+/)[0];\n  var props = {\n    $index: { value: itemIndex, enumerable: true, configurable: true, writable: true },\n    $$child: { value: true }\n  };\n  props[v] = { value: itemData, enumerable: true, configurable: true, writable: true };\n  return { el: cloneEl, linker: new Link(cloneEl, Object.create(model, props)) };\n}\n\nfunction repeatHandler(linkContext) {\n  var warr = $eval(linkContext.prop, linkContext.linker.model),\n    arr = warr && warr.arr,\n    el = linkContext.el,\n    comment = linkContext.comment,\n    lastArrayChangeInfo = linkContext.lastArraychange,\n    repeaterItem,\n    lastLinks = linkContext.lastLinks || [];\n\n  if (!linkContext.$$elRemovedFromDOM) {\n    comment = linkContext.comment = document.createComment('repeat end for ' + linkContext.prop);\n    el.parentNode.insertBefore(linkContext.comment, el);\n    el.remove();\n    linkContext.$$elRemovedFromDOM = true;\n  }\n\n  function rebuild() {\n    var docFragment = document.createDocumentFragment();\n    each(lastLinks, function (link) {\n      link.unlink();\n    });\n\n    lastLinks.length = 0;\n    lastLinks = [];\n    each(arr, function (itemData, index) {\n      repeaterItem = makeOneClonedLinkerForRepeater(linkContext, itemData, index);\n      lastLinks.push(repeaterItem.linker);\n      docFragment.appendChild(repeaterItem.el);\n    });\n\n    comment.parentNode.insertBefore(docFragment, comment);\n  }\n\n  if (lastLinks.length > 0 && lastArrayChangeInfo) {\n    var fn = lastArrayChangeInfo[0],\n      itemData,\n      _linker;\n    switch (fn) {\n      case 'push': {\n        itemData = arr[arr.length - 1];\n        repeaterItem = makeOneClonedLinkerForRepeater(linkContext, itemData, index);\n        lastLinks.push(repeaterItem.linker);\n        comment.parentNode.insertBefore(repeaterItem.el, comment);\n        break;\n      }\n      case 'pop': {\n        _linker = lastLinks.pop();\n        _linker.unlink();\n        break;\n      }\n      case 'removeOne': {\n        var index = lastArrayChangeInfo[1];\n        _linker = lastLinks.splice(index, 1)[0];\n        _linker.unlink();\n        break;\n      }\n      case 'unshift': {\n        var firstLinkerEl = lastLinks[0].el;\n        itemData = arr[0];\n        repeaterItem = makeOneClonedLinkerForRepeater(linkContext, itemData, index);\n        lastLinks.unshift(repeaterItem.linker);\n        firstLinkerEl.parentNode.insertBefore(repeaterItem.el, firstLinkerEl);\n        break;\n      }\n      case 'shift': {\n        _linker = lastLinks.shift();\n        _linker.unlink();\n        break;\n      }\n      default: {\n        // clear all and rebuild \n        rebuild();\n      }\n    }\n\n  } else {\n    rebuild();\n  }\n\n  linkContext.lastLinks = lastLinks;\n}","function showHideHandler(linkContext) {\n  // deal with both show and hide\n  var el = linkContext.el,\n    directive = linkContext.directive,\n    boolValue = !!evalLinkContext(linkContext);\n  if (directive === 'x-show' && boolValue\n    || directive === 'x-hide' && !boolValue) {\n    removeClass(el, 'x-hide');\n  }\n  else {\n    addClass(el, 'x-hide');\n  }\n}","\nfunction checkboxReact(linkContext) {\n  var el = linkContext.el;\n  function checkboxHandler() {\n    var value = el.value,\n      checked = el.checked,\n      propValue = evalLinkContext(linkContext);\n\n    if (!(isBoolean(propValue) || propValue instanceof WatchedArray)) {\n      throw linkError('checkbox should bind with array or boolean value');\n    }\n\n    if (propValue instanceof WatchedArray) {\n      if (!checked && propValue.contain(value)) {\n        propValue.removeOne(value);\n      }\n      else {\n        propValue.push(value);\n      }\n    }\n    else {\n      setWatchValue(linkContext.prop, checked, linkContext.linker.model);\n    }\n  }\n  addEventListenerHandler(el, 'click', checkboxHandler, linkContext.linker.eventStore);\n}\n","function commonReact(linkContext, event) {\n  var el = linkContext.el;\n  function commonHandler() {\n    setWatchValue(linkContext.prop, el.value || '', linkContext.linker.model);\n  }\n  addEventListenerHandler(el, event, commonHandler, linkContext.linker.eventStore);\n}","function moneyFilter(str) {\n  if (!Number(str)) return str;\n  str = str + '';\n  var digit = [],\n    decimals = '',\n    pointIndex = -1,\n    groups = [],\n    sep = ',';\n  if ((pointIndex = str.indexOf('.')) > -1) {\n    digit = str.slice(0, pointIndex).split('');\n    decimals = str.slice(pointIndex);\n  }\n  else {\n    digit = str.split('');\n  }\n  do {\n    groups.unshift(digit.splice(-3).join(''));\n  } while (digit.length > 0)\n\n  return groups.join(sep) + decimals;\n}","function phoneFilter(str) {\n  //the middle 4 digit replace with *\n  if (isString(str) && str.length === 11) {\n    return str.slice(0, 3) + '****' + str.slice(-4);\n  }\n\n  return str;\n}","function Link(el, data, behaviors, routeConfig) {\n  this.model = data;\n  this.el = el;\n  this.behaviors = behaviors;\n  this.eventStore = []; // store event bind info \n  this.linkContextCollection = []; // store linkContext\n  this.watchMap = Object.create(null); // stores watch and watchfn map\n  this.routeEl = null; // route template string container if it exists,it is not required.\n  this.bootstrap();\n\n  if (routeConfig) {\n    configRoutes(this, routeConfig.routes, routeConfig.defaultPath);\n  }\n};\n","Link.prototype.addBehaviors = function addBehaviors() {\n  var that = this;\n  if (isObject(this.behaviors)) {\n    var methods = Object.keys(this.behaviors);\n    each(methods, function (fn) {\n      if (isFunction(that.behaviors[fn])) {\n        if ((fn in that.model) && !isFunction(that.model[fn])) {\n          throw linkError('{0} is defined in the data model,please change the function/method name of \"{0}\"', fn)\n        }\n        if (!that.model[fn]) {\n          that.model[fn] = that.behaviors[fn];\n        }\n      }\n    });\n  }\n};","Link.prototype.bootstrap = function () {\n  if (this.model.hasOwnProperty('$$watched')) {\n    throw linkError('this model had been used for some linker, please check...');\n  }\n  this.watchModel(this.model);\n  _def_const_prop_(this.model, '$$watched', true);\n  this.compile(this.el);\n  this.render();\n  this.addBehaviors();\n};\n","Link.prototype.getLinkContextsFromInterpolation = function getLinkContextsFromInterpolation(el, text) {\n  var expr = ['\"', text, '\"'].join('').replace(/(\\{\\{)/g, '\"+(').replace(/(\\}\\})/g, ')+\"');\n  var lexer = new Lexer(expr),\n    watches = lexer.getWatches(),\n    that = this;\n  if (lexer.filterIndex > -1) {\n    throw linkError('{0} does not support filter for {1} , please use {2} instead',\n      'link', 'interpolation expression', 'x-bind');\n  }\n\n  each(watches, function (watch) {\n    that.addLinkContextAndSetWatch(el, watch, 'x-bind', expr);\n  });\n};\n\nLink.prototype.addLinkContextAndSetWatch = function addLinkContextAndSetWatch(el, watches, directive, expr, filter) {\n  var linkContext = LinkContext.create(el, watches, directive, expr, this);\n  if (filter) {\n    linkContext.filter = filter;\n  }\n  this.linkContextCollection.push(linkContext);\n  this.addWatchNotify(linkContext);\n  if (directive === 'x-model') {\n    modelReactDispatch(linkContext);\n  }\n};\n\nLink.prototype.getEventLinkContext = function getEventLinkContext(el, attrName, fn) {\n  var eventLinkContext;\n  var event = eventDirectiveRegex.exec(attrName)[1];\n  //done: fn could be fnc name , fnc(), fnc(args..) and null(with expr)\n  if (fnRegex.test(fn)) {\n    // fn\n    eventLinkContext = EventLinkContext.create(el, event, fn);\n  }\n  else if (fnCallRegex.test(fn)) {\n    // fn()\n    var leftBracketIndex = fn.indexOf('(');\n    eventLinkContext = EventLinkContext.create(el, event, fn.slice(0, leftBracketIndex));\n  }\n  else if (fnCallParamsRegex.test(fn)) {\n    // fn(a,b,c)\n    var args = fn.match(fnCallParamsRegex)[1].split(',');\n    var leftBracketIndex = fn.indexOf('(');\n    eventLinkContext = EventLinkContext.create(el, event, fn.slice(0, leftBracketIndex), args);\n  }\n  else {\n    // expr\n    eventLinkContext = EventLinkContext.create(el, event, null, fn);\n  }\n\n  this.bindEventLinkContext(eventLinkContext);\n};\n\nLink.prototype.getClassLinkContext = function getClassLinkContext(el, directive, expr) {\n  var\n    kvPairs = expr.slice(1, -1).split(','),\n    className,\n    subExpr,\n    spliter,\n    lexer,\n    watch,\n    linkContext,\n    that = this;\n\n  each(kvPairs, function (kv) {\n    spliter = kv.split(':');\n    className = spliter[0].replace(/[\\'\\\"]/g, ''),\n      subExpr = spliter[1];\n\n    if (isWatch(subExpr)) {\n      linkContext = LinkContext.create(el, subExpr, directive, subExpr, that);\n    }\n    else {\n      lexer = new Lexer(subExpr);\n      watch = lexer.getWatches();\n\n      each(watch, function (w) {\n        linkContext = LinkContext.create(el, w, directive, subExpr, that);\n      });\n    }\n    linkContext.className = className;\n    that.linkContextCollection.push(linkContext);\n    that.addWatchNotify(linkContext);\n  });\n};\n\n\nLink.prototype.getLinkContext = function getLinkContext(el, directive, expr) {\n  if (isWatch(expr)) {\n    this.addLinkContextAndSetWatch(el, expr, directive, expr);\n  }\n  else if (isLikeJson(expr)) {\n    this.getClassLinkContext(el, directive, expr);\n  }\n  else {\n    var lexer = new Lexer(expr),\n      watches = lexer.getWatches();\n    if (lexer.filter) {\n      expr = expr.slice(0, lexer.filterIndex);\n      this.addLinkContextAndSetWatch(el, watches, directive, expr, lexer.filter);\n    }\n    else\n      this.addLinkContextAndSetWatch(el, watches, directive, expr);\n  }\n};\n\n/**\n   * 1. get directives and build linkContext context info.\n   * 2. when it's x-model , add form ui value change listener for 2 two-way linkContext.\n   * 3. add watch fn.\n   *\n   *  */\nLink.prototype.compileDOM = function compileDOM(el) {\n  var attrs = el.attributes,\n    attrName,\n    attrValue,\n    that = this;\n  if (el.hasAttributes && el.hasAttributes()) {\n    each(attrs, function (attr) {\n      attrName = attr.name;\n      attrValue = trim(attr.value);\n      if (eventDirectiveRegex.test(attrName)) {\n        // event directive\n        that.getEventLinkContext(el, attrName, attrValue);\n      }\n      else if (directives.indexOf(attrName) > -1) {\n        // ! event directive\n        that.getLinkContext(el, attrName, attrValue);\n      }\n    });\n\n  } else if (el.nodeType === 3) {\n    var expr = trim(el.textContent);\n    if (expr && /\\{\\{[^\\}]+\\}\\}/.test(expr)) {\n      this.getLinkContextsFromInterpolation(el, expr);\n    }\n  }\n};\n\nLink.prototype.compile = function compile(el) {\n  var that = this;\n  if (el.hasAttribute && el.hasAttribute(REPEATER)) {\n    var expr = trim(el.getAttribute(REPEATER)), // var in watch\n      w = expr.split(/\\s+/);\n    if (w.length === 3) {\n      this.addLinkContextAndSetWatch(el, w[2], REPEATER, expr);\n    } else {\n      throw linkError('repeat only support exr like: var in array.')\n    }\n    el.removeAttribute(REPEATER);\n    return;\n  }\n\n  if (el.hasAttribute && el.hasAttribute(VIEW)) {\n    if (!this.routeEl) {\n      this.routeEl = el;\n      el.removeAttribute(VIEW);\n      return;\n    }\n    else {\n      throw linkError('a link context can only have on more than one x-view');\n    }\n  }\n\n  this.compileDOM(el);\n\n  each(el.childNodes, function (node) {\n    that.compile(node);\n  });\n};\n","function linkError() {\n  var error = formatString.apply(null, arguments);\n  return new Error(error);\n}","function $eval(expr, $this) {\n  var fn = new Function('with(this){return ' + expr + ';}');\n  try {\n    return fn.call($this);\n  } catch (ex) {\n    throw linkError('invalid expr {0}.', expr);\n  }\n}\n\nfunction evalLinkContext(linkContext) {\n  var val = $eval(linkContext.expr, linkContext.linker.model);\n\n  if (linkContext.filter && linkContext.directive === 'x-bind') {\n    var filters = linkContext.linker.filters,\n      filter = linkContext.filter;\n    if (filters[filter]) {\n      val = filters[filter].call(val, val);\n    }\n  }\n\n  return val;\n}\n\nfunction setWatchValue(watch, value, model) {\n  if (value === null) {\n    value = 'null';\n  }\n  else if (typeof (value) === 'undefined') {\n    value = 'undefined';\n  }\n  var expr = '';\n  if (isString(value)) {\n    expr = [watch, '=', \"'\", value, \"'\"].join('');\n  }\n  else if (isPrimitive(value)) {\n    expr = [watch, '=', value].join('');\n  }\n  else {\n    throw linkError('value should be a primitive type for setWatchValue');\n  }\n\n  $eval(expr, model);\n}\n","Link.prototype.bindEventLinkContext = function bindcontext(context) {\n  var context = context,\n    linker = this;\n\n  var func = function (ev) {\n    var el = context.el,\n      fn = context.fn,\n      args = context.args; // when fn is null, args is expr to eval.\n\n    if (fn === null) {\n      // expr \n      $eval(args, linker.model);\n    } else if (linker.model[fn]) {\n      if (!isArray(args)) {\n        linker.model[fn].apply(linker.model, [ev, el]);\n      }\n      else {\n        var eargs = [ev, el];\n        var evaledArgs = [];\n        each(args, function (arg) {\n          arg = trim(arg);\n          if (arg.charAt(0) === \"'\" || arg.charAt(0) === '\"') {\n            evaledArgs.push(arg.replace(quoteRegx, ''));\n          } else {\n            evaledArgs.push($eval(arg, linker.model));\n          }\n        });\n        unshift.apply(eargs, evaledArgs);\n        linker.model[fn].apply(linker.model, eargs);\n      }\n\n    }\n  };\n\n  addEventListenerHandler(context.el, context.event, func, this.eventStore);\n};\n\n\n\n","function LinkContext(el, watches, directive, expr, linker) {\n  this.el = el;\n  this.prop = watches; // string, or string array of watches\n  this.directive = directive; // one directive could have multiple watches\n  this.expr = expr; // watch or watch expr \n  this.linker = linker;\n}\n\nLinkContext.create = function (el, watches, directive, expr, linker) {\n  /**\n   * watches could be string and array\n   * array: interpilation and expr\n   * array+expr: expr\n   * array+interpilation: expr\n   *  */\n  return new LinkContext(el, watches, directive, expr, linker);\n};\n\n\n/**\n * event: string , event name e.g. click \n * fn: string , function name, function will invoke using $model context, use this to refer wrapper $model\n * fn(el) execute\n *  */\nfunction EventLinkContext(el, event, fn, args) {\n  // event directive format: x-on-event\n  this.el = el;\n  this.event = event;\n  this.fn = fn; // fn name in behaviors \n  this.args = args; // arguments pass by event directive\n}\n\nEventLinkContext.create = function (el, event, fn, args) {\n  return new EventLinkContext(el, event, fn, args);\n};\n","Link.prototype.defineObserver = function defineObserver(model, prop, value, propStack, isArray) {\n  var that = this,\n    watch = concat.call(propStack, prop).join('.');\n  if (!isArray) {\n    Object.defineProperty(model, prop, {\n      get: function () {\n        return value;\n      },\n      set: function (newVal) {\n        if (newVal !== value) {\n          value = newVal;\n          notify(that.watchMap, watch);\n        }\n      }\n    });\n  }\n  else {\n    model[prop] = new WatchedArray(that.watchMap, watch, value);\n  }\n};\n\nLink.prototype.watchModel = function watchModel(model, propStack) {\n  propStack = propStack || [];\n  var props = Object.keys(model),\n    prop,\n    value,\n    that = this;\n  each(props, function (prop) {\n    value = model[prop];\n    if (isObject(value) && !isArray(value)) {\n      propStack.push(prop);\n      that.watchModel(value, propStack);\n      propStack.pop();\n    }\n    else {\n      that.defineObserver(model, prop, value, propStack.slice(0), isArray(value));\n    }\n  });\n};","// get watches in an expr.\nfunction Lexer(text) {\n  this.text = text;\n  this.index = 0;\n  this.len = text.length;\n  this.watches = [];\n  this.filter = null;\n  this.filterIndex = -1;\n  this.filterEndIndex = -1;\n  // this.tokens = []; // add position info\n}\n\nLexer.prototype = {\n  constructor: Lexer,\n\n  getWatches: function () {\n    while (this.index < this.len) {\n      var ch = this.text[this.index];\n      if (watchStartRegex.test(ch)) {\n        this._getWatch(ch);\n      }\n      else if (ch === '\"' || ch === \"'\") {\n        // string \n        while (this._peek() !== ch && this.index < this.len) {\n          this.index++;\n        }\n        if (this.index + 1 < this.len) {\n          this.index += 2;\n        } else {\n          throw new Error('unclosed string in expr');\n        }\n      }\n      else if (ch === '|') {\n        if (this._peek() !== '|') {\n          //filter sign\n          // this.filter = trim(this.text.slice(this.index + 1));\n          this.filterIndex = this.index++;\n          this._getFilter();\n          break; // following chars don't need going on.\n        }\n        else {\n          // || \n          this.index += 2;\n        }\n      }\n      else {\n        this.index++;\n      }\n    }\n\n    return this.watches;\n  },\n  _getFilter: function () {\n    // last index is | \n    var filter = [this.text[this.index]];\n    while (this.index < this.len) {\n      if (validWatchChar.test(this._peek())) {\n        filter.push(this.text[++this.index]);\n      }\n      else {\n        this.index++;\n        break;\n      }\n    }\n    this.filterEndIndex = this.index;\n    this.filter = trim(filter.join(''));\n  },\n  _getWatch: function (ch) {\n    var watch = [ch],\n      start = this.index;\n    while (this.index < this.len) {\n      if (validWatchChar.test(this._peek())) {\n        watch.push(this.text[++this.index]);\n      } else {\n        this.index++;\n        break;\n      }\n    }\n    this.watches.push(watch.join(''));\n    // this.tokens.push({ index: start, watch: watch.join('') });\n  },\n\n  _peek: function (i) {\n    i = i || 1;\n    return (this.index + i < this.len) ? this.text[this.index + 1] : false;\n  }\n};","\nLink.prototype.setModel = function setModel(newModel) {\n  this.model = newModel;\n  this.watchModel(this.model);\n  this.compile(this.el);\n  this.render();\n};\n\nLink.prototype.unlink = function unlink() {\n  this.linkContextCollection = null;\n  this.watchMap = null;\n  // clean event binding \n  each(this.eventStore, function (event) {\n    removeEventListenerHandler(event.el, event.event, event.handler);\n  });\n  this.eventStore = null;\n  if (this.model.$$child) {\n    this.el.remove();\n  }\n  delete this.model.$$watched;\n  this.model = null;\n};\n\n// if the model contains array property ,it will be wrapped, this fn get the origin model back\nfunction unWrapModel(model, dest) {\n  dest = dest || {};\n  var props = Object.keys(model),\n    value;\n  each(props, function (prop) {\n    value = model[prop];\n    if (value instanceof WatchedArray) {\n      dest[prop] = value.getArray();\n    }\n    else if (isObject(value)) {\n      dest[prop] = {};\n      unWrapModel(value, dest[prop]);\n    }\n    else {\n      if (!isFunction(value)) {\n        dest[prop] = model[prop];\n      }\n    }\n  });\n}\n\nLink.prototype.getModel = function getModel() {\n  var _model = {};\n  unWrapModel(this.model, _model);\n  return _model;\n};\n","\nLink.prototype.addWatchNotify = function addWatchNotify(linkContext) {\n  var that = this;\n  if (isArray(linkContext.prop)) {\n    each(linkContext.prop, function (watch) {\n      that.addNofityHandler(watch, linkContext);\n    });\n  }\n\n  else {\n    that.addNofityHandler(linkContext.prop, linkContext);\n  }\n};\n\nLink.prototype.addNofityHandler = function addNofityHandler(watch, linkContext) {\n  if (!this.watchMap[watch]) {\n    this.watchMap[watch] = [];\n  }\n  this.watchMap[watch].push(notifyFnFactory(linkContext));\n};\n\nLink.prototype.render = function render() {\n  for (var watch in this.watchMap) {\n    notify(this.watchMap, watch);\n  }\n};\n\nfunction notifyFnFactory(linkContext) {\n  /**\n   * 1. this is  directive render fn \n   * 2.change has value when it's watcharray change\n   *  */\n  return function (change) {\n    change && (linkContext.lastArraychange = change);\n    renderLink(linkContext);\n  };\n}\n\nfunction renderLink(linkContext) {\n  DIRETIVE_RENDER_MAP[linkContext.directive].call(null, linkContext);\n}","/**\n * x-router based on old browser hash   \n*/\nfunction hash(path) {\n  if (typeof path === 'undefined') {\n    var href = location.href,\n      index = href.indexOf('#');\n    return index === -1 ? '' : href.slice(index + 1)\n  }\n  else {\n    location.hash = path;\n  }\n}\n\nfunction replaceHash(path) {\n  var href = location.href,\n    index = href.indexOf('#');\n  if (index > -1) {\n    location.replace(href.slice(0, index) + '#' + path);\n  }\n  else {\n    location.replace(href + '#' + path);\n  }\n}\n\nvar templateStore = Object.create(null);\n\nfunction loadTemplate(url, cb) {\n  var tpl = templateStore[url];\n  if (tpl) {\n    cb.call(null, tpl);\n  }\n  else {\n    var xhr = new XMLHttpRequest();\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === XMLHttpRequest.DONE) {\n        if (xhr.status === 200) {\n          templateStore[url] = xhr.responseText;\n          cb.call(null, xhr.responseText);\n        }\n      }\n    };\n\n    xhr.open('GET', url, true);\n    xhr.setRequestHeader('Accept', 'text/html');\n    xhr.send(null);\n  }\n}\n\n/**\n  var routes = {\n    'path':{\n       model: {},\n       methods:{},\n       template: '',\n       templateUrl: '',\n       preLink:fn,\n       postLink:fn\n    }\n  }];\n*/\nfunction configRoutes(linker, routes, defaultPath) {\n  addEventListenerHandler(window, 'hashchange', renderRouter, linker.eventStore);\n  var hs = hash();\n  if (hs) {\n    renderRouter();\n  }\n  else {\n    replaceHash(defaultPath);\n  }\n  function renderRouter() {\n    var route = routes[hash()];\n    if (!route) {\n      replaceHash(defaultPath);\n      return;\n    }\n    if (!route.model || !isObject(route.model)) {\n      route.model = {};\n    }\n    var template = trim(route.template);\n    if (!template) {\n      if (route.templateUrl) {\n        loadTemplate(route.templateUrl, function (tpl) {\n          linkRoute(linker, route, tpl);\n        });\n      } else {\n        linkRoute(linker, route, '');\n      }\n    } else {\n      linkRoute(linker, route, template);\n    }\n  }\n}\n\nfunction linkRoute(linker, route, tpl) {\n  var preLinkReturn;\n  if (linker.routeEl) {\n    linker.routeEl.innerHTML = tpl;\n  }\n  if (route.lastLinker) {\n    route.lastLinker.unlink(); // destroy link\n  }\n  if (isFunction(route.preLink)) {\n    preLinkReturn = route.preLink.call(route, linker);\n  }\n  if (preLinkReturn && isFunction(preLinkReturn.then)) {\n    preLinkReturn.then(traceLink);\n  } else {\n    if (preLinkReturn === false) return;// skip link\n    traceLink();\n  }\n\n  function traceLink() {\n    if (!linker.routeEl) return; // no x-view , no route link \n    route.lastLinker = link({\n      el: linker.routeEl,\n      model: route.model,\n      methods: route.methods,\n    });\n    if (isFunction(route.postLink)) {\n      route.postLink.call(route, route.lastLinker);\n    }\n  }\n}","\nvar style = document.createElement('style');\nstyle.type = 'text/css';\nstyle.textContent = '.x-hide{display:none !important;}';\ndocument.head.insertAdjacentElement('afterBegin', style);\n\n}\n)();"]}